{"version":3,"sources":["screens/HomeScreen/constants.js","screens/HomeScreen/actions.js","screens/HomeScreen/reducer.js","api/apiUrl.js","api/callApi.js","screens/HomeScreen/selectLocation.js","screens/HomeScreen/mapStyles.js","screens/HomeScreen/form.js","screens/HomeScreen/index.js"],"names":["initialState","actualScreen","typeDate","location","lat","lng","actualLocation","zoom","request","loading","success","error","data","fetchData","startDate","endDate","actions","reducer","state","action","type","payload","SET_TYPE_DATE","API_URL","url","body","dispatch","a","REQUEST","SUCCESS","FAILURE","console","log","axios","method","headers","libraries","mapContainerStyle","width","height","options","styles","featureType","elementType","stylers","visibility","lightness","color","disableDefaultUI","zoomControl","SelectLocation","React","useEffect","navigator","geolocation","getCurrentPosition","position","setMyLocation","coords","latitude","longitude","useState","myLocation","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","handleSearch","callApi","start","end","style","marginTop","overflowX","textAlign","className","center","changeLocation","toast","themed","setTimeout","disabled","onClick","e","latLng","FormParameters","setTypeDate","Container","Form","onSubmit","preventDefault","Group","Label","Control","as","value","onChange","target","placeholder","HomeScreen","useReducer"],"mappings":"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","file":"static/js/4.87a80b64.chunk.js","sourcesContent":["export const initialState = {\n  actualScreen: \"formParameters\",\n  typeDate: \"hour\",\n  location: {\n    lat: 0,\n    lng: 0,\n  },\n  actualLocation: {\n    lat: 0,\n    lng: 0,\n  },\n  zoom: 4,\n  request: {\n    loading: false,\n    success: false,\n    error: null,\n    data: null,\n  },\n  fetchData: {\n    startDate: \"\",\n    endDate: \"\",\n  },\n};\n","export const actions = {\n    SET_LOCATION: 'SET_LOCATION',\n    SET_ACTUAL_LOCATION: 'SET_ACTUAL_LOCATION',\n\n    RESULTS_FETCH_REQUEST: 'RESULTS_FETCH_REQUEST',\n    RESULTS_FETCH_SUCCESS: 'RESULTS_FETCH_SUCCESS',\n    RESULTS_FETCH_FAILURE: 'RESULTS_FETCH_FAILURE',\n\n    RESET_STATE: 'RESET_STATE',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_SCREEN: 'SET_SCREEN',\n    SET_TYPE_DATE: 'SET_TYPE_DATE',\n}","import { initialState } from \"./constants\";\nimport { actions } from \"./actions\";\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_ZOOM:\n      return {\n        ...state,\n        zoom: action.payload.zoom,\n      };\n    case actions.SET_LOCATION:\n      return {\n        ...state,\n        location: action.payload,\n      };\n    case actions.SET_ACTUAL_LOCATION:\n      return {\n        ...state,\n        actualLocation: action.payload,\n      };\n    case actions.RESULTS_FETCH_REQUEST:\n      return {\n        ...state,\n        request: {\n          ...state.request,\n          loading: true,\n        },\n      };\n    case actions.RESULTS_FETCH_SUCCESS:\n      return {\n        ...state,\n        request: {\n          ...state.request,\n          loading: false,\n          success: true,\n          data: action.payload,\n        },\n      };\n    case actions.RESULTS_FETCH_FAILURE:\n      return {\n        ...state,\n        request: {\n          ...state.request,\n          loading: false,\n          success: false,\n          error: action.payload,\n        },\n      };\n    case actions.RESET_STATE:\n      return {\n        ...initialState,\n      };\n    case actions.SET_SCREEN:\n      return {\n        ...state,\n        actualScreen: action.payload,\n      };\n    case action.SET_TYPE_DATE:\n      return {\n        ...state,\n        typeDate: action.payload,\n        fetchData: {\n          ...state.fetchData,\n          startDate: \"\",\n          endDate: \"\",\n        },\n      };\n  }\n};\n","export const API_URL = \"http://localhost:5000\";\n","import { API_URL } from \"./apiUrl\";\nimport axios from \"axios\";\nexport async function callApi(url, actions, body, dispatch) {\n  const { REQUEST, SUCCESS, FAILURE } = actions;\n  console.log(\"callApi\", url);\n  try {\n    dispatch({\n      type: REQUEST,\n    });\n\n    const { data } = await axios({\n      method: \"POST\",\n      url: API_URL + url,\n      data: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    dispatch({\n      type: SUCCESS,\n      payload: data,\n    });\n  } catch (e) {\n    dispatch({\n      type: FAILURE,\n      payload: e,\n    });\n  }\n}\n","import React from \"react\";\nimport { actions } from \"./actions\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport { Search } from \"components\";\nimport { mapStyles } from \"./mapStyles\";\nimport { callApi } from \"api\";\nimport toast from \"react-hot-toast\";\nimport { themed } from \"components/ToastAlert\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"100vh\",\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nexport const SelectLocation = ({ state, dispatch }) => {\n  React.useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      if (state.location.lat == 0) {\n        setMyLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        dispatch({\n          type: actions.SET_ACTUAL_LOCATION,\n          payload: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n        });\n        dispatch({\n          type: actions.SET_LOCATION,\n          payload: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n        });\n      }\n    });\n  }, []);\n  const [myLocation, setMyLocation] = React.useState(null);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_MAP_KEY,\n    libraries,\n  });\n  const changeLocation = (lat, lng) => {\n    toast.success(\"Location changed\", { ...themed });\n    dispatch({\n      type: actions.SET_LOCATION,\n      payload: {\n        lat,\n        lng,\n      },\n    });\n    dispatch({\n      type: actions.SET_ACTUAL_LOCATION,\n      payload: {\n        lat,\n        lng,\n      },\n    });\n    setTimeout(() => {\n      dispatch({\n        type: actions.SET_ZOOM,\n        payload: {\n          zoom: 15,\n        },\n      });\n    }, 1000);\n  };\n  const handleSearch = (lat, lng) => {\n    callApi(\n      \"/montly/\",\n      {\n        REQUEST: actions.RESULTS_FETCH_REQUEST,\n        SUCCESS: actions.RESULTS_FETCH_SUCCESS,\n        FAILURE: actions.RESULTS_FETCH_FAILURE,\n      },\n      {\n        longitude: lng,\n        latitude: lat,\n        start: 2018,\n        end: 2018,\n      },\n      dispatch\n    );\n  };\n  return (\n    <div\n      style={{ marginTop: \"13vh\", overflowX: \"hidden\", textAlign: \"center\" }}\n    >\n      <h4>Get information about sunshine in your area.</h4>\n      <br />\n      <h3>Select your location</h3>\n      {loadError ? (\n        <div>Error al cargar el mapa</div>\n      ) : !isLoaded ? (\n        <div>Cargando mapa</div>\n      ) : (\n        <div className=\"map_container\">\n          <div className=\"search_container\">\n            <div className=\"search_input\">\n              <Search\n                center={state.actualLocation}\n                changeLocation={changeLocation}\n              />\n            </div>\n            <button\n              className=\"my_button\"\n              disabled={state.request.loading || state.location.lat === null}\n              onClick={() => {\n                dispatch({\n                  type: actions.SET_LOCATION,\n                  payload: myLocation,\n                });\n                dispatch({\n                  type: actions.SET_ACTUAL_LOCATION,\n                  payload: myLocation,\n                });\n              }}\n            >\n              Go to my location\n            </button>\n          </div>\n          <GoogleMap\n            options={options}\n            mapContainerStyle={mapContainerStyle}\n            zoom={state.zoom}\n            onClick={(e) => {\n              if (!state.request.loading) {\n                toast.success(\"Location changed\", { ...themed });\n\n                dispatch({\n                  type: actions.SET_LOCATION,\n                  payload: {\n                    lat: e.latLng.lat(),\n                    lng: e.latLng.lng(),\n                  },\n                });\n                handleSearch(e.latLng.lat(), e.latLng.lng());\n              }\n            }}\n            center={state.actualLocation}\n          >\n            <Marker key={state.actualLocation.lat} position={state.location} />\n          </GoogleMap>\n          <div className=\"next_step_container\">\n            <button\n              className=\"my_button\"\n              disabled={state.request.loading || state.location.lat === null}\n              onClick={() => {\n                dispatch({\n                  type: actions.SET_SCREEN,\n                  payload: \"formParameters\",\n                });\n              }}\n            >\n              Next step\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","export const mapStyles = [\n  {\n    featureType: \"administrative\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        lightness: 33,\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#f2e5d4\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#c5dac6\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"labels\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        lightness: 20,\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"all\",\n    stylers: [\n      {\n        lightness: 20,\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#c5c6c6\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#e4d7c6\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#fbfaf7\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#acbcc9\",\n      },\n    ],\n  },\n];\n","import React from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport { actions } from \"./actions\";\nexport function FormParameters({ state, dispatch }) {\n  const [typeDate, setTypeDate] = React.useState(\"\");\n  const renderFormType = () => {\n    switch (typeDate) {\n      case \"year\":\n        return (\n          <>\n            <Form.Group>\n              <Form.Label>Select Year initial</Form.Label>\n              <Form.Control type=\"number\" placeholder=\"Enter Year initial\" />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Select Year final</Form.Label>\n              <Form.Control type=\"number\" placeholder=\"Enter Year final\" />\n            </Form.Group>\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n  return (\n    <Container className=\"form_parameters\">\n      <button\n        onClick={() => {\n          dispatch({\n            type: actions.SET_SCREEN,\n            payload: \"selectLocation\",\n          });\n        }}\n        className=\"my_button mb-4\"\n      >\n        Go back to the map\n      </button>\n      <h3>Parameters</h3>\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <Form.Group>\n          <Form.Label>Select type of date</Form.Label>\n          <Form.Control\n            as=\"select\"\n            value={state?.typeDate}\n            onChange={(e) => {\n              setTypeDate(e.target.value);\n            }}\n          >\n            <option value=\"\">Select type</option>\n            <option value=\"year\">Year</option>\n            <option value=\"month\">Month</option>\n            <option value=\"day\">Day</option>\n            <option value=\"hour\">Hour</option>\n          </Form.Control>\n        </Form.Group>\n        {renderFormType()}\n      </Form>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Form, Container } from \"react-bootstrap\";\nimport { initialState } from \"./constants\";\nimport { reducer } from \"./reducer\";\nimport { SelectLocation } from \"./selectLocation\";\nimport { FormParameters } from \"./form\";\nimport { actions } from \"./actions\";\nexport default function HomeScreen() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const renderScreen = () => {\n    switch (state?.actualScreen) {\n      case \"selectLocation\":\n        return <SelectLocation state={state} dispatch={dispatch} />;\n      case \"formParameters\":\n        return <FormParameters state={state} dispatch={dispatch} />;\n      default:\n        return <FormParameters state={state} dispatch={dispatch} />;\n    }\n  };\n  return <>{renderScreen()}</>;\n}\n"],"sourceRoot":""}