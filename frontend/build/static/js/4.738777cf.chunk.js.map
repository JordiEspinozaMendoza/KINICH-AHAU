{"version":3,"sources":["screens/HomeScreen/constants.js","screens/HomeScreen/actions.js","screens/HomeScreen/reducer.js","assets/logos/sun.png","screens/HomeScreen/selectLocation.js","screens/HomeScreen/mapStyles.js","api/apiUrl.js","api/callApi.js","screens/HomeScreen/form.js","screens/HomeScreen/results.js","screens/HomeScreen/index.js"],"names":["initialState","actualScreen","typeDate","location","lat","lng","actualLocation","zoom","request","loading","success","error","data","fetchData","start","end","url","actions","reducer","state","action","type","payload","libraries","mapContainerStyle","width","height","options","styles","featureType","elementType","stylers","visibility","lightness","color","disableDefaultUI","zoomControl","SelectLocation","dispatch","React","useState","setMyLocation","useEffect","setMyLocationToMap","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","nameLocation","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","style","marginTop","overflowX","textAlign","modifiers","className","center","changeLocation","toast","themed","setTimeout","disabled","onClick","e","latLng","icon","sunLogo","scaledSize","window","google","maps","Size","API_URL","a","REQUEST","SUCCESS","FAILURE","console","log","axios","method","response","message","months","typeDateArray","value","label","FormParameters","setTypeDate","handleChange","Container","onSubmit","preventDefault","promise","callApi","Group","Label","Control","as","onChange","target","map","index","selected","placeholder","id","fullYear","document","getElementById","month","onSelect","Date","getFullYear","getMonth","day","getDate","formattedMonth","formattedDay","Math","abs","renderFormType","Results","res","setRes","selectedRadiation","setSelectedRadiation","allRadiations","setAllRadiations","Object","keys","key","key2","key3","title","arr","values","push","name","floor","substring","prev","radiation","xName","HomeScreen","useReducer","renderScreen"],"mappings":"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","file":"static/js/4.738777cf.chunk.js","sourcesContent":["export const initialState = {\n  actualScreen: \"selectLocation\",\n  typeDate: \"hour\",\n  location: {\n    lat: 0,\n    lng: 0,\n  },\n  actualLocation: {\n    lat: 0,\n    lng: 0,\n  },\n  zoom: 4,\n  request: {\n    loading: false,\n    success: false,\n    error: null,\n    data: null,\n  },\n  fetchData: {\n    start: \"\",\n    end: \"\",\n    url: \"\",\n    \n  },\n};\n","export const actions = {\n    SET_LOCATION: 'SET_LOCATION',\n    SET_ACTUAL_LOCATION: 'SET_ACTUAL_LOCATION',\n\n    RESULTS_FETCH_REQUEST: 'RESULTS_FETCH_REQUEST',\n    RESULTS_FETCH_SUCCESS: 'RESULTS_FETCH_SUCCESS',\n    RESULTS_FETCH_FAILURE: 'RESULTS_FETCH_FAILURE',\n\n    RESET_STATE: 'RESET_STATE',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_SCREEN: 'SET_SCREEN',\n\n    SET_FETCH_DATA: 'SET_FETCH_DATA',\n    RESET_FETCH_DATA: 'RESET_FETCH_DATA',\n}","import { initialState } from \"./constants\";\nimport { actions } from \"./actions\";\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_ZOOM:\n      return {\n        ...state,\n        zoom: action.payload.zoom,\n      };\n    case actions.SET_LOCATION:\n      return {\n        ...state,\n        location: action.payload,\n      };\n    case actions.SET_ACTUAL_LOCATION:\n      return {\n        ...state,\n        actualLocation: action.payload,\n      };\n    case actions.RESULTS_FETCH_REQUEST:\n      return {\n        ...state,\n        request: {\n          ...state.request,\n          loading: true,\n        },\n      };\n    case actions.RESULTS_FETCH_SUCCESS:\n      return {\n        ...state,\n        request: {\n          ...state.request,\n          loading: false,\n          success: true,\n          data: action.payload,\n        },\n      };\n    case actions.RESULTS_FETCH_FAILURE:\n      return {\n        ...state,\n        request: {\n          ...state.request,\n          loading: false,\n          success: false,\n          error: action.payload,\n        },\n      };\n    case actions.RESET_STATE:\n      return {\n        ...initialState,\n      };\n    case actions.SET_SCREEN:\n      return {\n        ...state,\n        actualScreen: action.payload,\n        request:{\n          ...state.request,\n          success: false,\n        }\n      };\n    case actions.SET_FETCH_DATA:\n      return {\n        ...state,\n        fetchData: {\n          ...state.fetchData,\n          ...action.payload,\n        },\n      };\n    case actions.RESET_FETCH_DATA:\n      return {\n        ...state,\n        fetchData: {\n          ...initialState.fetchData,\n        },\n      };\n  }\n};\n","export default __webpack_public_path__ + \"static/media/sun.1eeab01a.png\";","import React from \"react\";\nimport { actions } from \"./actions\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport { Search } from \"components\";\nimport { mapStyles } from \"./mapStyles\";\nimport { PrimaryButton, Header } from \"components/styledComponents\";\nimport toast from \"react-hot-toast\";\nimport { themed } from \"components/ToastAlert\";\nimport sunLogo from \"assets/logos/sun.png\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"100vh\",\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nexport const SelectLocation = ({ state, dispatch }) => {\n  const [myLocation, setMyLocation] = React.useState();\n\n  React.useEffect(() => {\n    setMyLocationToMap();\n  }, []);\n  const setMyLocationToMap = () => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      if (state.location.lat == 0) {\n        setMyLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        dispatch({\n          type: actions.SET_ACTUAL_LOCATION,\n          payload: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            nameLocation: \"My Location\",\n          },\n        });\n        dispatch({\n          type: actions.SET_LOCATION,\n          payload: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            nameLocation: \"My Location\",\n          },\n        });\n      }\n    });\n  };\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_MAP_KEY,\n    libraries,\n  });\n  const changeLocation = (lat, lng, nameLocation = \"\") => {\n    toast.success(\"Location changed\", { ...themed });\n    dispatch({\n      type: actions.SET_LOCATION,\n      payload: {\n        lat,\n        lng,\n        nameLocation,\n      },\n    });\n    dispatch({\n      type: actions.SET_ACTUAL_LOCATION,\n      payload: {\n        lat,\n        lng,\n        nameLocation,\n      },\n    });\n    setTimeout(() => {\n      dispatch({\n        type: actions.SET_ZOOM,\n        payload: {\n          zoom: 15,\n        },\n      });\n    }, 200);\n  };\n\n  return (\n    <div\n      style={{ marginTop: \"13vh\", overflowX: \"hidden\", textAlign: \"center\" }}\n    >\n      <Header modifiers={[\"h3\"]}>\n        Get information about sunshine in your area.\n      </Header>\n      <br />\n      <Header modifiers={[\"h4\"]}>Select your location on the map</Header>\n      {loadError ? (\n        <div>Error al cargar el mapa</div>\n      ) : !isLoaded ? (\n        <div>Cargando mapa</div>\n      ) : (\n        <div className=\"map_container\">\n          <div className=\"search_container\">\n            <div className=\"search_input\">\n              <Search\n                center={state.actualLocation}\n                changeLocation={changeLocation}\n              />\n            </div>\n            <PrimaryButton\n              className=\"my_button small_button\"\n              disabled={state.request.loading || state.location.lat === null}\n              onClick={() => {\n                setMyLocationToMap();\n              }}\n            >\n              Go to my location\n            </PrimaryButton>\n          </div>\n          <GoogleMap\n            options={options}\n            mapContainerStyle={mapContainerStyle}\n            zoom={state.zoom}\n            onClick={(e) => {\n              if (!state.request.loading) {\n                toast.success(\"Location changed\", { ...themed });\n                dispatch({\n                  type: actions.SET_LOCATION,\n                  payload: {\n                    lat: e.latLng.lat(),\n                    lng: e.latLng.lng(),\n                  },\n                });\n              }\n            }}\n            center={state.actualLocation}\n          >\n            <Marker\n              key={state.actualLocation.lat}\n              position={state.location}\n              icon={{\n                url: sunLogo,\n                scaledSize: new window.google.maps.Size(50, 50),\n              }}\n            />\n          </GoogleMap>\n          <div className=\"next_step_container\">\n            <PrimaryButton\n              className=\"my_button\"\n              disabled={state.request.loading || state.location.lat === null}\n              onClick={() => {\n                dispatch({\n                  type: actions.SET_SCREEN,\n                  payload: \"formParameters\",\n                });\n              }}\n            >\n              Next step\n            </PrimaryButton>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","export const mapStyles = [\n  {\n    featureType: \"administrative\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        lightness: 33,\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#f2e5d4\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#c5dac6\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"labels\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        lightness: 20,\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"all\",\n    stylers: [\n      {\n        lightness: 20,\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#c5c6c6\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#e4d7c6\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#fbfaf7\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#acbcc9\",\n      },\n    ],\n  },\n];\n","export const API_URL = \"https://spaceappsk.azurewebsites.net/api/nasa/\";\n","import { API_URL } from \"./apiUrl\";\nimport axios from \"axios\";\nexport async function callApi(url, actions, dispatch) {\n  const { REQUEST, SUCCESS, FAILURE } = actions;\n  console.log(\"callApi\", url);\n  try {\n    dispatch({\n      type: REQUEST,\n    });\n\n    const { data } = await axios({\n      method: \"GET\",\n      url: API_URL + url,\n\n    });\n    dispatch({\n      type: SUCCESS,\n      payload: data,\n    });\n  } catch (e) {\n    dispatch({\n      type: FAILURE,\n      payload: e,\n    });\n    throw e.response?.data ? e.response.data : e.message;\n\n  }\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { actions } from \"./actions\";\nimport { callApi } from \"api\";\nimport {\n  PrimaryButton,\n  SecondaryButton,\n  Header,\n  Span,\n  StyledForm as Form,\n} from \"components/styledComponents\";\nimport toast from \"react-hot-toast\";\nimport { themed } from \"components/ToastAlert\";\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\nconst typeDateArray = [\n  {\n    value: \"day\",\n    label: \"Custom date\",\n  },\n  {\n    value: \"month\",\n    label: \"Month\",\n  },\n  {\n    value: \"year\",\n    label: \"Year\",\n  },\n  {\n    value: \"oneDay\",\n    label: \"One Day\",\n  },\n];\nexport function FormParameters({ state, dispatch }) {\n  const [typeDate, setTypeDate] = React.useState(\"day\");\n  const handleChange = (data) => {\n    dispatch({\n      type: actions.SET_FETCH_DATA,\n      payload: {\n        start: data.start,\n        end: data.end,\n        url: data.url,\n      },\n    });\n  };\n  const renderFormType = () => {\n    switch (typeDate) {\n      case \"year\":\n        return (\n          <>\n            <Form.Group>\n              <Form.Label>Select Year initial</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Year initial\"\n                onChange={(e) => {\n                  handleChange({\n                    start: e.target.value,\n                    end: state.fetchData.end,\n                    url: \"yearly\",\n                  });\n                }}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Select Year final</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Year final\"\n                onChange={(e) => {\n                  handleChange({\n                    start: state.fetchData.start,\n                    end: e.target.value,\n                    url: \"yearly\",\n                  });\n                }}\n              />\n            </Form.Group>\n          </>\n        );\n      case \"month\":\n        return (\n          <>\n            <Form.Group>\n              <Form.Label>Select year initial</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter year\"\n                id=\"year\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Select Month initial</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={(e) => {\n                  var fullYear = document.getElementById(\"year\").value;\n                  var month =\n                    e.target.value < 10 ? \"0\" + e.target.value : e.target.value;\n                  handleChange({\n                    start: fullYear + month+ \"01\",\n                    end: state.fetchData.end,\n                    url: \"daily\",\n                  });\n                }}\n              >\n                {months.map((month, index) => (\n                  <option key={index} value={index + 1}>\n                    {month}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Select Month final</Form.Label>\n              <Form.Control\n                as=\"select\"\n                as=\"select\"\n                onChange={(e) => {\n                  var fullYear = document.getElementById(\"year\").value;\n                  var month =\n                    e.target.value < 10 ? \"0\" + e.target.value : e.target.value;\n                  handleChange({\n                    start: state.fetchData.start,\n                    end: fullYear + month+ \"01\",\n                    url: \"daily\",\n                  });\n                }}\n              >\n                {months.map((month, index) => (\n                  <option key={index} value={index + 1}>\n                    {month}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </>\n        );\n      case \"day\":\n        return (\n          <>\n            <Form.Group>\n              <Form.Label>Select Day initial</Form.Label>\n              <Form.Control\n                type=\"date\"\n                onSelect={(e) => {\n                  var fullYear = new Date(e.target.value).getFullYear();\n                  var month = new Date(e.target.value).getMonth() + 1;\n                  var day = new Date(e.target.value).getDate();\n\n                  var formattedMonth = month < 10 ? \"0\" + month : month;\n                  var formattedDay = day < 10 ? \"0\" + day : day;\n                  handleChange({\n                    start: `${fullYear}${formattedMonth}${\n                      Math.abs(formattedDay) + 1\n                    }`,\n                    end: state.fetchData.end,\n                    url: \"daily\",\n                  });\n                }}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Select Day final</Form.Label>\n              <Form.Control\n                type=\"date\"\n                onSelect={(e) => {\n                  var fullYear = new Date(e.target.value).getFullYear();\n                  var month = new Date(e.target.value).getMonth() + 1;\n                  var day = new Date(e.target.value).getDate();\n\n                  var formattedMonth = month < 10 ? \"0\" + month : month;\n                  var formattedDay = day < 10 ? \"0\" + day : day;\n\n                  handleChange({\n                    start: state.fetchData.start,\n                    end: `${fullYear}${formattedMonth}${\n                      Math.abs(formattedDay) + 1\n                    }`,\n                    url: \"daily\",\n                  });\n                }}\n              />\n            </Form.Group>\n          </>\n        );\n      case \"oneDay\":\n        return (\n          <>\n            <Form.Group>\n              <Form.Label>Select Day</Form.Label>\n              <Form.Control\n                type=\"date\"\n                onSelect={(e) => {\n                  var fullYear = new Date(e.target.value).getFullYear();\n                  var month = new Date(e.target.value).getMonth() + 1;\n                  var day = new Date(e.target.value).getDate();\n\n                  var formattedMonth = month < 10 ? \"0\" + month : month;\n                  var formattedDay = day < 10 ? \"0\" + day : day;\n\n                  handleChange({\n                    start: `${fullYear}${formattedMonth}${\n                      Math.abs(formattedDay) + 1\n                    }`,\n                    end: `${fullYear}${formattedMonth}${\n                      Math.abs(formattedDay) + 1\n                    }`,\n                    url: \"daily\",\n                  });\n                }}\n              />\n            </Form.Group>\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    toast.promise(\n      callApi(\n        `?start=${state.fetchData.start}&end=${state.fetchData.end}&latitude=${state.location.lat}&longitude=${state.location.lng}&resolution=${state.fetchData.url}&comunity=SB`,\n        {\n          REQUEST: actions.RESULTS_FETCH_REQUEST,\n          SUCCESS: actions.RESULTS_FETCH_SUCCESS,\n          FAILURE: actions.RESULTS_FETCH_FAILURE,\n        },\n        dispatch\n      ),\n      {\n        loading: \"Loading...\",\n        success: \"Success!\",\n        error: \"There was an error, please try again.\",\n      },\n      { ...themed }\n    );\n  };\n  React.useEffect(() => {\n    if (state.request.success) {\n      dispatch({\n        type: actions.SET_SCREEN,\n        payload: \"results\",\n      });\n    }\n  }, [state.request.success]);\n  return (\n    <Container className=\"form_parameters\">\n      <PrimaryButton\n        onClick={() => {\n          dispatch({\n            type: actions.SET_SCREEN,\n            payload: \"selectLocation\",\n          });\n        }}\n        className=\"my_button mb-4\"\n      >\n        Go back to the map\n      </PrimaryButton>\n      <Header modifiers={[\"h3\"]}>Parameters</Header>\n      <Span>\n        Select the type of date you want to see the data of the sunshine\n      </Span>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label>Select type of date</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => {\n              setTypeDate(e.target.value);\n              dispatch({\n                type: actions.RESET_FETCH_DATA,\n              });\n            }}\n          >\n            {typeDateArray.map((type, index) => (\n              <option\n                key={index}\n                value={type.value}\n                selected={state.typeDate === type.value}\n              >\n                {type.label}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        {renderFormType()}\n        {state.location.nameLocation != \"\" && (\n          <Span>\n            <b>Location:</b>{\" \"}\n            {state.location.nameLocation\n              ? state.location.nameLocation\n              : \"No location name\"}\n          </Span>\n        )}\n        <br />\n        <Span>\n          <b>Current coordinates selected:</b>\n          <br />\n          <b>Latitude: </b>\n          {state.location.lat}\n          <br />\n\n          <b>Longitude: </b>\n          {state.location.lng}\n        </Span>\n        <br />\n        {state.location.lng != 0 ? (\n          <SecondaryButton\n            className=\"my_button mt-4\"\n            type=\"submit\"\n            disabled={state.request.loading}\n          >\n            Submit parameters\n          </SecondaryButton>\n        ) : (\n          <SecondaryButton\n            className=\"my_button mt-4\"\n            onClick={() => {\n              dispatch({\n                type: actions.SET_SCREEN,\n                payload: \"selectLocation\",\n              });\n            }}\n          >\n            Please select a location on the map\n          </SecondaryButton>\n        )}\n      </Form>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Graph, GraphArr, PrimaryButton, Header, Span } from \"components\";\nimport { Container, Dropdown } from \"react-bootstrap\";\nimport { radiation } from \"utils/equations\";\nimport { actions } from \"./actions\";\nexport const Results = ({ state, dispatch }) => {\n  const [res, setRes] = React.useState([]);\n  const [selectedRadiation, setSelectedRadiation] = React.useState(\"\");\n  const [allRadiations, setAllRadiations] = React.useState([]);\n  const [ages, setAges] = React.useState([]);\n\n  React.useEffect(() => {\n    console.log(state.fetchData);\n    Object.keys(state.request.data).map((key, index) => {\n      Object.keys(state.request.data[key]).map((key2) => {\n        Object.keys(state.request.data[key][key2]).map((key3) => {\n          console.log(state.request.data[key][key2][key3]);\n          setAllRadiations((allRadiations) => [\n            ...allRadiations,\n            state.request.data[key][key2][key3].title,\n          ]);\n          var arr = [];\n          state.request.data[key][key2][key3].values.map((value, index) => {\n            arr.push({\n              value: value,\n              name: Math.floor(state.fetchData.start.substring(0, 4)) + index,\n            });\n          });\n          setRes((prev) => [...prev, arr]);\n        });\n      });\n    });\n  }, []);\n\n  return (\n    <Container className=\"results\">\n      <PrimaryButton\n        className=\"my_button mb-4\"\n        onClick={() =>\n          dispatch({ type: actions.SET_SCREEN, payload: \"formParameters\" })\n        }\n      >\n        Go back\n      </PrimaryButton>\n      <Header modifiers={[\"h3\"]}>Results</Header>\n\n      {state.location.nameLocation != \"\" && (\n        <Span>\n          <b>Location:</b>{\" \"}\n          {state.location.nameLocation\n            ? state.location.nameLocation\n            : \"No location name\"}\n        </Span>\n      )}\n\n      <br />\n      <Span>\n        <b>Current coordinates selected:</b>\n        <br />\n        <b>Latitude: </b>\n        {state.location.lat}\n        <br />\n\n        <b>Longitude: </b>\n        {state.location.lng}\n      </Span>\n      <br />\n\n      <div className=\"mt-4\"></div>\n      <Span>\n        <b>Please select the radiation you want to see:</b>\n      </Span>\n      <select\n        className=\"custom-select\"\n        onChange={(e) => setSelectedRadiation(e.target.value)}\n      >\n        <option value=\"\">Select radiation</option>\n        {allRadiations.map((radiation, index) => (\n          <option value={radiation} key={index}>\n            {radiation}\n          </option>\n        ))}\n      </select>\n      <br />\n      <Span>Radiation levels for the selected period of time.</Span>\n      {res.map((state, index) => (\n        <div\n          key={index}\n          className={\n            selectedRadiation == allRadiations[index] ? \"d-block\" : \"d-none\"\n          }\n        >\n          <GraphArr data={state} xName=\"name\" name=\"value\" />\n        </div>\n      ))}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { initialState } from \"./constants\";\nimport { reducer } from \"./reducer\";\nimport { SelectLocation } from \"./selectLocation\";\nimport { FormParameters } from \"./form\";\nimport { Results } from \"./results\";\nexport default function HomeScreen() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const renderScreen = () => {\n    switch (state?.actualScreen) {\n      case \"selectLocation\":\n        return <SelectLocation state={state} dispatch={dispatch} />;\n      case \"formParameters\":\n        return <FormParameters state={state} dispatch={dispatch} />;\n      case \"results\":\n        return <Results state={state} dispatch={dispatch} />;\n      default:\n        return <SelectLocation state={state} dispatch={dispatch} />;\n    }\n  };\n  return <>{renderScreen()}</>;\n}\n"],"sourceRoot":""}